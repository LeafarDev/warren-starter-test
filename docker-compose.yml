version: '3'
services:
  warren-db:
    container_name: warren-db
    image: postgres
    restart: always
    ports:
      - "5433:5432"
    env_file:
      - ./config/postgres/database.env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 15s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_PASSWORD: root
  warren-db-testing:
    container_name: warren-db-testing
    image: postgres
    restart: always
    ports:
      - "5435:5432"
    env_file:
      - ./config/postgres/database-testing.env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 15s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_PASSWORD: root
  warren-bank-api:
    container_name: warren-bank-api
    build: ./applications/warren-api-test
    command: sh -c "npm i && npm run dev"
    volumes:
      - ./applications/warren-api-test:/usr/src/app
    ports:
      - 3333:3333
    depends_on:
      warren-db:
        condition: service_healthy
    environment:
      - NODE_ENV=development
  warren-client:
    stdin_open: true
    container_name: warren-client
    build: ./applications/warren-client-test
    command: sh -c "npm i && npm run start"
    ports:
      - "3380:3000"
    volumes:
      - ./applications/warren-client-test:/usr/src/app
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
  warren-client-test:
    profiles: ["cli-only"]
    container_name: warren-client-test
    build:
      context: ./applications/warren-client-test
      dockerfile: test.Dockerfile
    environment:
      - CI=true
    command: npm test
